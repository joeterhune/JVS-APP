<?php
require_once("../php-lib/common.php");
require_once("../php-lib/db_functions.php");
require_once("../workflow/wfcommon.php");

checkLoggedIn();

$courtTypeGraphs = array (
    'Circuit Civil' => array(
        'dataPath' => '/var/www/Palm/civ',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'pend_juryTrials' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_juryTrials.json',
                'caption' => 'Jury Cases',
                'xAxisName' => 'Case Age (Months)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )  ,
            'pend_crit' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_crit.json',
                'caption' => 'Critical Cases',
                'yAxisName' => '# Cases'
            )  
        )
    ),
	'Foreclosure' => array(
        'dataPath' => '/var/www/Palm/civ',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'pend_crit' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_crit.json',
                'caption' => 'Critical Cases',
                'yAxisName' => '# Cases'
            )
        )
    ),
    'County Civil' => array(
        'dataPath' => '/var/www/Palm/civ',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )  ,
            'pend_crit' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_crit.json',
                'caption' => 'Critical Cases',
                'yAxisName' => '# Cases'
            )  
        )
    ),
    'Felony' => array(
        'dataPath' => '/var/www/Palm/crim',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )
        )
    ),
    'Misdemeanor' => array(
        'dataPath' => '/var/www/Palm/crim',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )
        )
    ),
    'Family' => array(
        'dataPath' => '/var/www/Palm/civ',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'pend_contested' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_contested.json',
                'caption' => 'Contested Dissolution Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'pend_uncontested' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_uncontested.json',
                'caption' => 'Uncontested Dissolution Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )
        )
    ),
    'Juvenile' => array(
        'dataPath' => '/var/www/Palm/juv',
        'graphTypes' => array(
            'penddep' => array (
                'template' => 'pend.tpl',
                'data_file' => 'penddep.json',
                'caption' => 'Pending Dependency Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'rodep' => array (
                'template' => 'pend.tpl',
                'data_file' => 'rodep.json',
                'caption' => 'Reopen Dependency Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'penddel' => array (
                'template' => 'pend.tpl',
                'data_file' => 'penddel.json',
                'caption' => 'Pending Delinquency Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'rodel' => array (
                'template' => 'pend.tpl',
                'data_file' => 'rodel.json',
                'caption' => 'Reopen Delinquency Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )
        )
    ),
    'Probate' => array(
        'dataPath' => '/var/www/Palm/pro',
        'graphTypes' => array(
            'pend' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend.json',
                'caption' => 'Pending Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'ro' => array (
                'template' => 'pend.tpl',
                'data_file' => 'ro.json',
                'caption' => 'Reopen Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'pend_contested' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_contested.json',
                'caption' => 'Contested Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            ),
            'pend_uncontested' => array (
                'template' => 'pend.tpl',
                'data_file' => 'pend_uncontested.json',
                'caption' => 'Uncontested Cases',
                'xAxisName' => 'Case Age (Days)',
                'yAxisName' => '# Cases'
            )
        )
    )
);

$dbh = dbConnect("icms");
$user = $_SESSION['user'];

$myqueues = array($user);
$sharedqueues = array();

getSubscribedQueues($user, $dbh, $myqueues);
getSharedQueues($user, $dbh, $sharedqueues);
$allqueues = array_merge($myqueues, $sharedqueues);

$queueItems = array();

$wfcount = getQueues($queueItems, $allqueues, $dbh);

$inOutMonths = 12;

$query = "
    select
        json
    from
        config
    where
        module = 'config'
        and user = :user
";

$month = date('Y-m');
$USMonth = date('m/Y');
$USMonth2 = date('F Y');

$rec = getDataOne($query, $dbh, array('user' => $user));

$config = json_decode($rec['json'], TRUE);

$reportDivs = explode(",", $config['reports']);
sort($reportDivs);

$jdbh = dbConnect("judge-divs");
$query = "
    select
        division_id as DivisionID,
        division_type as DivisionType
    from
        divisions
    where
        show_icms_list = 1
";
$divs = array();
getData($divs, $query, $jdbh, null, 'DivisionID', 1);

$allGraphs = array();

foreach ($reportDivs as $div) {
    $courtType = $divs[$div]['DivisionType'];
    if (array_key_exists($courtType,$courtTypeGraphs)) {
        $graphInfo = $courtTypeGraphs[$courtType];
    } else {
        # No graphs defined for this court type 
        continue;
    }
    
    $path = $graphInfo['dataPath'];
    
    $rptPath = sprintf("%s/div%s/%s", $path, $div, $month);
    $divPath = sprintf("%s/div%s", $path, $div);
    $pathPieces = explode("/", $divPath);
    
    $divGraphs = $graphInfo['graphTypes'];
    
    $graphs = array('divType' => $divs[$div]['DivisionType'], 'div' => $div, 'graphArr' => array());
    
    foreach ($divGraphs as $graph => $info) {
        $jsonFile = sprintf("%s/%s.json", $rptPath, $graph);
        if (!file_exists($jsonFile)) {
            continue;
        }
        $rptJson = file_get_contents($jsonFile);
        
        $smarty = new Smarty;
        $smarty->setTemplateDir($templateDir);
        $smarty->setCompileDir($compileDir);
        $smarty->setCacheDir($cacheDir);
        
        $smarty->assign('courtType', $pathPieces[4]);
        $smarty->assign('function_month', $month);
        $smarty->assign('division',$div);
        $smarty->assign('month', $USMonth2);
        $smarty->assign('json', $rptJson);
        $smarty->assign('graphType', $graph);
        foreach (array_keys($info) as $key) {
            $smarty->assign($key, $info[$key]);
        }
        
        $template = sprintf("reports/%s", $info['template']);
        $thisGraph = $smarty->fetch($template);
        $graphs['graphArr'][$graph] = $thisGraph;
    }
    
    $inOut = file_get_contents("$divPath/inOut.json");
    $inOutJson = json_decode($inOut,true);
    
    // Extract only $inOutMonths of data from the $inOut
    $catArray = array(array('category' => array_slice($inOutJson['categories'][0]['category'], -($inOutMonths))));
    $dataArray = array();
    foreach ($inOutJson['dataset'] as $set) {
        array_push($dataArray,array('seriesname' => $set['seriesname'], 'data' => array_slice($set['data'], -($inOutMonths))));
    }
    
    $smarty = new Smarty;
    $smarty->setTemplateDir($templateDir);
    $smarty->setCompileDir($compileDir);
    $smarty->setCacheDir($cacheDir);
    
    $smarty->assign('division',$div);
    $smarty->assign('month',$USMonth);
    $smarty->assign('inOutCategories', json_encode($catArray));
    $smarty->assign('inOutDataSet', json_encode($dataArray));
    $thisGraph = $smarty->fetch('reports/inOut.tpl');
    $graphs['graphArr']['inOut'] = $thisGraph;
    
    if (file_exists("$divPath/ttd.json")) {
        $ttd = file_get_contents("$divPath/ttd.json");
        $ttdJson = json_decode($ttd,true);
        
        // Extract only $inOutMonths of data from the $inOut
        $catArray = array(array('category' => array_slice($ttdJson['categories'][0]['category'], -($inOutMonths))));
        
        $dataArray = array();
        foreach ($ttdJson['dataset'] as $set) {
            array_push($dataArray,array('seriesname' => $set['seriesname'], 'data' => array_slice($set['data'], -($inOutMonths))));
        }
        
        $smarty = new Smarty;
        $smarty->setTemplateDir($templateDir);
        $smarty->setCompileDir($compileDir);
        $smarty->setCacheDir($cacheDir);
        
        $smarty->assign('division',$div);
        $smarty->assign('month',$USMonth);
        $smarty->assign('ttdCategories', json_encode($catArray));
        $smarty->assign('ttdDataSet', json_encode($dataArray));
        $thisGraph = $smarty->fetch('reports/ttd.tpl');
        $graphs['graphArr']['ttd'] = $thisGraph;    
    }
    array_push($allGraphs, $graphs);
}

$smarty = new Smarty;
$smarty->setTemplateDir($templateDir);
$smarty->setCompileDir($compileDir);
$smarty->setCacheDir($cacheDir);

$smarty->assign('allGraphs', $allGraphs);
$smarty->assign('wfCount', $wfcount);
$smarty->assign('active', "reports");

$smarty->display('top/header.tpl');
echo $smarty->fetch("reports/index.tpl");